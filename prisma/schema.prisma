generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  role          String         @default("customer")
  firstName     String?
  lastName      String?
  phone         String?
  address       String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  barberProfile BarberProfile?
  bookings      Booking[]
  reviews       Review[]
}

model BarberProfile {
  id           String    @id @default(uuid())
  userId       String    @unique
  businessName String
  bio          String?
  location     Json
  hourlyRate   Float?
  portfolio    String[]
  workingHours Json
  user         User      @relation(fields: [userId], references: [id])
  bookings     Booking[]
  reviews      Review[]
  services     Service[]
}

model Service {
  id          String        @id @default(uuid())
  barberId    String
  name        String
  description String?
  price       Float
  duration    Int
  category    String
  bookings    Booking[]
  barber      BarberProfile @relation(fields: [barberId], references: [id])
}

model Booking {
  id            String        @id @default(uuid())
  customerId    String
  barberId      String
  serviceId     String
  dateTime      DateTime
  status        String        @default("scheduled")
  paymentStatus String        @default("pending")
  totalAmount   Float
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  barber        BarberProfile @relation(fields: [barberId], references: [id])
  customer      User          @relation(fields: [customerId], references: [id])
  service       Service       @relation(fields: [serviceId], references: [id])
  payment       Payment?
  review        Review?
}

model Review {
  id         String        @id @default(uuid())
  customerId String
  barberId   String
  bookingId  String        @unique
  rating     Int
  comment    String?
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  barber     BarberProfile @relation(fields: [barberId], references: [id])
  booking    Booking       @relation(fields: [bookingId], references: [id])
  customer   User          @relation(fields: [customerId], references: [id])
}

model Payment {
  id              String   @id @default(uuid())
  bookingId       String   @unique
  amount          Float
  stripePaymentId String
  status          String
  createdAt       DateTime @default(now())
  booking         Booking  @relation(fields: [bookingId], references: [id])
}
